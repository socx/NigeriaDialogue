//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_Candidate_Party", "Party", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ElectionMonitoring.Data.Party), "Candidate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.Candidate), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_RaceResult_Candidate", "Candidate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.Candidate), "RaceResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.RaceResult), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_Category_CategoryType", "CategoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.CategoryType), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.Category), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_Race_RaceType", "RaceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.RaceType), "Race", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.Race), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_RaceResult_Race", "Race", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.Race), "RaceResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.RaceResult), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_RaceResult_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.Region), "RaceResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.RaceResult), true)]
[assembly: EdmRelationshipAttribute("ElectionMonitoring", "FK_Region_RegionType", "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ElectionMonitoring.Data.RegionType), "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ElectionMonitoring.Data.Region), true)]

#endregion

namespace ElectionMonitoring.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ElectionMonitoringEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ElectionMonitoringEntities object using the connection string found in the 'ElectionMonitoringEntities' section of the application configuration file.
        /// </summary>
        public ElectionMonitoringEntities() : base("name=ElectionMonitoringEntities", "ElectionMonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ElectionMonitoringEntities object.
        /// </summary>
        public ElectionMonitoringEntities(string connectionString) : base(connectionString, "ElectionMonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ElectionMonitoringEntities object.
        /// </summary>
        public ElectionMonitoringEntities(EntityConnection connection) : base(connection, "ElectionMonitoringEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Candidate> Candidates
        {
            get
            {
                if ((_Candidates == null))
                {
                    _Candidates = base.CreateObjectSet<Candidate>("Candidates");
                }
                return _Candidates;
            }
        }
        private ObjectSet<Candidate> _Candidates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryType> CategoryTypes
        {
            get
            {
                if ((_CategoryTypes == null))
                {
                    _CategoryTypes = base.CreateObjectSet<CategoryType>("CategoryTypes");
                }
                return _CategoryTypes;
            }
        }
        private ObjectSet<CategoryType> _CategoryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Party> Parties
        {
            get
            {
                if ((_Parties == null))
                {
                    _Parties = base.CreateObjectSet<Party>("Parties");
                }
                return _Parties;
            }
        }
        private ObjectSet<Party> _Parties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Race> Races
        {
            get
            {
                if ((_Races == null))
                {
                    _Races = base.CreateObjectSet<Race>("Races");
                }
                return _Races;
            }
        }
        private ObjectSet<Race> _Races;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RaceResult> RaceResults
        {
            get
            {
                if ((_RaceResults == null))
                {
                    _RaceResults = base.CreateObjectSet<RaceResult>("RaceResults");
                }
                return _RaceResults;
            }
        }
        private ObjectSet<RaceResult> _RaceResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RaceType> RaceTypes
        {
            get
            {
                if ((_RaceTypes == null))
                {
                    _RaceTypes = base.CreateObjectSet<RaceType>("RaceTypes");
                }
                return _RaceTypes;
            }
        }
        private ObjectSet<RaceType> _RaceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionType> RegionTypes
        {
            get
            {
                if ((_RegionTypes == null))
                {
                    _RegionTypes = base.CreateObjectSet<RegionType>("RegionTypes");
                }
                return _RegionTypes;
            }
        }
        private ObjectSet<RegionType> _RegionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Years
        {
            get
            {
                if ((_Years == null))
                {
                    _Years = base.CreateObjectSet<Year>("Years");
                }
                return _Years;
            }
        }
        private ObjectSet<Year> _Years;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Candidates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCandidates(Candidate candidate)
        {
            base.AddObject("Candidates", candidate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryTypes(CategoryType categoryType)
        {
            base.AddObject("CategoryTypes", categoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParties(Party party)
        {
            base.AddObject("Parties", party);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaces(Race race)
        {
            base.AddObject("Races", race);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RaceResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaceResults(RaceResult raceResult)
        {
            base.AddObject("RaceResults", raceResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RaceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaceTypes(RaceType raceType)
        {
            base.AddObject("RaceTypes", raceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionTypes(RegionType regionType)
        {
            base.AddObject("RegionTypes", regionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Years EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYears(Year year)
        {
            base.AddObject("Years", year);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="raceID">No Metadata Documentation available.</param>
        public ObjectResult<AggregatedRaceResult> GetAggregatedRaceResult(Nullable<global::System.Int32> raceID)
        {
            ObjectParameter raceIDParameter;
            if (raceID.HasValue)
            {
                raceIDParameter = new ObjectParameter("RaceID", raceID);
            }
            else
            {
                raceIDParameter = new ObjectParameter("RaceID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<AggregatedRaceResult>("GetAggregatedRaceResult", raceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="raceID">No Metadata Documentation available.</param>
        /// <param name="regionCode">No Metadata Documentation available.</param>
        public ObjectResult<AggregatedRaceResult> GetAggregatedRaceResultByRegion(Nullable<global::System.Int32> raceID, global::System.String regionCode)
        {
            ObjectParameter raceIDParameter;
            if (raceID.HasValue)
            {
                raceIDParameter = new ObjectParameter("RaceID", raceID);
            }
            else
            {
                raceIDParameter = new ObjectParameter("RaceID", typeof(global::System.Int32));
            }
    
            ObjectParameter regionCodeParameter;
            if (regionCode != null)
            {
                regionCodeParameter = new ObjectParameter("RegionCode", regionCode);
            }
            else
            {
                regionCodeParameter = new ObjectParameter("RegionCode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<AggregatedRaceResult>("GetAggregatedRaceResultByRegion", raceIDParameter, regionCodeParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Candidate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Candidate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Candidate object.
        /// </summary>
        /// <param name="candidateID">Initial value of the CandidateID property.</param>
        /// <param name="partyID">Initial value of the PartyID property.</param>
        public static Candidate CreateCandidate(global::System.Int32 candidateID, global::System.Int32 partyID)
        {
            Candidate candidate = new Candidate();
            candidate.CandidateID = candidateID;
            candidate.PartyID = partyID;
            return candidate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CandidateID
        {
            get
            {
                return _CandidateID;
            }
            set
            {
                if (_CandidateID != value)
                {
                    OnCandidateIDChanging(value);
                    ReportPropertyChanging("CandidateID");
                    _CandidateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CandidateID");
                    OnCandidateIDChanged();
                }
            }
        }
        private global::System.Int32 _CandidateID;
        partial void OnCandidateIDChanging(global::System.Int32 value);
        partial void OnCandidateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyID
        {
            get
            {
                return _PartyID;
            }
            set
            {
                OnPartyIDChanging(value);
                ReportPropertyChanging("PartyID");
                _PartyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyID");
                OnPartyIDChanged();
            }
        }
        private global::System.Int32 _PartyID;
        partial void OnPartyIDChanging(global::System.Int32 value);
        partial void OnPartyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                OnRaceIDChanging(value);
                ReportPropertyChanging("RaceID");
                _RaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceID");
                OnRaceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaceID;
        partial void OnRaceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Candidate_Party", "Party")]
        public Party Party
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("ElectionMonitoring.FK_Candidate_Party", "Party").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("ElectionMonitoring.FK_Candidate_Party", "Party").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Party> PartyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Party>("ElectionMonitoring.FK_Candidate_Party", "Party");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Party>("ElectionMonitoring.FK_Candidate_Party", "Party", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Candidate", "RaceResult")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Candidate", "RaceResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Candidate", "RaceResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TopLevel
        {
            get
            {
                return _TopLevel;
            }
            set
            {
                OnTopLevelChanging(value);
                ReportPropertyChanging("TopLevel");
                _TopLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopLevel");
                OnTopLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _TopLevel;
        partial void OnTopLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnTopLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentCategoryID
        {
            get
            {
                return _ParentCategoryID;
            }
            set
            {
                OnParentCategoryIDChanging(value);
                ReportPropertyChanging("ParentCategoryID");
                _ParentCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryID");
                OnParentCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentCategoryID;
        partial void OnParentCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryTypeID
        {
            get
            {
                return _CategoryTypeID;
            }
            set
            {
                OnCategoryTypeIDChanging(value);
                ReportPropertyChanging("CategoryTypeID");
                _CategoryTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryTypeID");
                OnCategoryTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryTypeID;
        partial void OnCategoryTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Category_CategoryType", "CategoryType")]
        public CategoryType CategoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryType>("ElectionMonitoring.FK_Category_CategoryType", "CategoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryType>("ElectionMonitoring.FK_Category_CategoryType", "CategoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryType> CategoryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryType>("ElectionMonitoring.FK_Category_CategoryType", "CategoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryType>("ElectionMonitoring.FK_Category_CategoryType", "CategoryType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="CategoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryType object.
        /// </summary>
        /// <param name="categoryTypeID">Initial value of the CategoryTypeID property.</param>
        public static CategoryType CreateCategoryType(global::System.Int32 categoryTypeID)
        {
            CategoryType categoryType = new CategoryType();
            categoryType.CategoryTypeID = categoryTypeID;
            return categoryType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryTypeID
        {
            get
            {
                return _CategoryTypeID;
            }
            set
            {
                if (_CategoryTypeID != value)
                {
                    OnCategoryTypeIDChanging(value);
                    ReportPropertyChanging("CategoryTypeID");
                    _CategoryTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryTypeID");
                    OnCategoryTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryTypeID;
        partial void OnCategoryTypeIDChanging(global::System.Int32 value);
        partial void OnCategoryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Category_CategoryType", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("ElectionMonitoring.FK_Category_CategoryType", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("ElectionMonitoring.FK_Category_CategoryType", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Party")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Party : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Party object.
        /// </summary>
        /// <param name="partyID">Initial value of the PartyID property.</param>
        public static Party CreateParty(global::System.Int32 partyID)
        {
            Party party = new Party();
            party.PartyID = partyID;
            return party;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartyID
        {
            get
            {
                return _PartyID;
            }
            set
            {
                if (_PartyID != value)
                {
                    OnPartyIDChanging(value);
                    ReportPropertyChanging("PartyID");
                    _PartyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartyID");
                    OnPartyIDChanged();
                }
            }
        }
        private global::System.Int32 _PartyID;
        partial void OnPartyIDChanging(global::System.Int32 value);
        partial void OnPartyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acronym
        {
            get
            {
                return _Acronym;
            }
            set
            {
                OnAcronymChanging(value);
                ReportPropertyChanging("Acronym");
                _Acronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acronym");
                OnAcronymChanged();
            }
        }
        private global::System.String _Acronym;
        partial void OnAcronymChanging(global::System.String value);
        partial void OnAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogoFile
        {
            get
            {
                return _LogoFile;
            }
            set
            {
                OnLogoFileChanging(value);
                ReportPropertyChanging("LogoFile");
                _LogoFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogoFile");
                OnLogoFileChanged();
            }
        }
        private global::System.String _LogoFile;
        partial void OnLogoFileChanging(global::System.String value);
        partial void OnLogoFileChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Candidate_Party", "Candidate")]
        public EntityCollection<Candidate> Candidates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Candidate>("ElectionMonitoring.FK_Candidate_Party", "Candidate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Candidate>("ElectionMonitoring.FK_Candidate_Party", "Candidate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Race")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Race : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Race object.
        /// </summary>
        /// <param name="raceID">Initial value of the RaceID property.</param>
        public static Race CreateRace(global::System.Int32 raceID)
        {
            Race race = new Race();
            race.RaceID = raceID;
            return race;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                if (_RaceID != value)
                {
                    OnRaceIDChanging(value);
                    ReportPropertyChanging("RaceID");
                    _RaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceID");
                    OnRaceIDChanged();
                }
            }
        }
        private global::System.Int32 _RaceID;
        partial void OnRaceIDChanging(global::System.Int32 value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaceTypeID
        {
            get
            {
                return _RaceTypeID;
            }
            set
            {
                OnRaceTypeIDChanging(value);
                ReportPropertyChanging("RaceTypeID");
                _RaceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceTypeID");
                OnRaceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaceTypeID;
        partial void OnRaceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Race_RaceType", "RaceType")]
        public RaceType RaceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RaceType>("ElectionMonitoring.FK_Race_RaceType", "RaceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RaceType>("ElectionMonitoring.FK_Race_RaceType", "RaceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RaceType> RaceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RaceType>("ElectionMonitoring.FK_Race_RaceType", "RaceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RaceType>("ElectionMonitoring.FK_Race_RaceType", "RaceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Race", "RaceResult")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Race", "RaceResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Race", "RaceResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="RaceResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RaceResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RaceResult object.
        /// </summary>
        /// <param name="raceResultID">Initial value of the RaceResultID property.</param>
        public static RaceResult CreateRaceResult(global::System.Int32 raceResultID)
        {
            RaceResult raceResult = new RaceResult();
            raceResult.RaceResultID = raceResultID;
            return raceResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceResultID
        {
            get
            {
                return _RaceResultID;
            }
            set
            {
                if (_RaceResultID != value)
                {
                    OnRaceResultIDChanging(value);
                    ReportPropertyChanging("RaceResultID");
                    _RaceResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceResultID");
                    OnRaceResultIDChanged();
                }
            }
        }
        private global::System.Int32 _RaceResultID;
        partial void OnRaceResultIDChanging(global::System.Int32 value);
        partial void OnRaceResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                OnRaceIDChanging(value);
                ReportPropertyChanging("RaceID");
                _RaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceID");
                OnRaceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaceID;
        partial void OnRaceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CandidateID
        {
            get
            {
                return _CandidateID;
            }
            set
            {
                OnCandidateIDChanging(value);
                ReportPropertyChanging("CandidateID");
                _CandidateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CandidateID");
                OnCandidateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CandidateID;
        partial void OnCandidateIDChanging(Nullable<global::System.Int32> value);
        partial void OnCandidateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfVotes
        {
            get
            {
                return _NoOfVotes;
            }
            set
            {
                OnNoOfVotesChanging(value);
                ReportPropertyChanging("NoOfVotes");
                _NoOfVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfVotes");
                OnNoOfVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfVotes;
        partial void OnNoOfVotesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubmittedBy
        {
            get
            {
                return _SubmittedBy;
            }
            set
            {
                OnSubmittedByChanging(value);
                ReportPropertyChanging("SubmittedBy");
                _SubmittedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmittedBy");
                OnSubmittedByChanged();
            }
        }
        private Nullable<global::System.Int32> _SubmittedBy;
        partial void OnSubmittedByChanging(Nullable<global::System.Int32> value);
        partial void OnSubmittedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmittedOn
        {
            get
            {
                return _SubmittedOn;
            }
            set
            {
                OnSubmittedOnChanging(value);
                ReportPropertyChanging("SubmittedOn");
                _SubmittedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmittedOn");
                OnSubmittedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmittedOn;
        partial void OnSubmittedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmittedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedOn
        {
            get
            {
                return _ApprovedOn;
            }
            set
            {
                OnApprovedOnChanging(value);
                ReportPropertyChanging("ApprovedOn");
                _ApprovedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedOn");
                OnApprovedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedOn;
        partial void OnApprovedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Candidate", "Candidate")]
        public Candidate Candidate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Candidate>("ElectionMonitoring.FK_RaceResult_Candidate", "Candidate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Candidate>("ElectionMonitoring.FK_RaceResult_Candidate", "Candidate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Candidate> CandidateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Candidate>("ElectionMonitoring.FK_RaceResult_Candidate", "Candidate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Candidate>("ElectionMonitoring.FK_RaceResult_Candidate", "Candidate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Race", "Race")]
        public Race Race
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("ElectionMonitoring.FK_RaceResult_Race", "Race").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("ElectionMonitoring.FK_RaceResult_Race", "Race").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Race> RaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("ElectionMonitoring.FK_RaceResult_Race", "Race");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Race>("ElectionMonitoring.FK_RaceResult_Race", "Race", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Region", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("ElectionMonitoring.FK_RaceResult_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("ElectionMonitoring.FK_RaceResult_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("ElectionMonitoring.FK_RaceResult_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("ElectionMonitoring.FK_RaceResult_Region", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="RaceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RaceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RaceType object.
        /// </summary>
        /// <param name="raceTypeID">Initial value of the RaceTypeID property.</param>
        public static RaceType CreateRaceType(global::System.Int32 raceTypeID)
        {
            RaceType raceType = new RaceType();
            raceType.RaceTypeID = raceTypeID;
            return raceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceTypeID
        {
            get
            {
                return _RaceTypeID;
            }
            set
            {
                if (_RaceTypeID != value)
                {
                    OnRaceTypeIDChanging(value);
                    ReportPropertyChanging("RaceTypeID");
                    _RaceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceTypeID");
                    OnRaceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RaceTypeID;
        partial void OnRaceTypeIDChanging(global::System.Int32 value);
        partial void OnRaceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Race_RaceType", "Race")]
        public EntityCollection<Race> Races
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Race>("ElectionMonitoring.FK_Race_RaceType", "Race");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Race>("ElectionMonitoring.FK_Race_RaceType", "Race", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionID">Initial value of the RegionID property.</param>
        public static Region CreateRegion(global::System.Int32 regionID)
        {
            Region region = new Region();
            region.RegionID = regionID;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                if (_RegionID != value)
                {
                    OnRegionIDChanging(value);
                    ReportPropertyChanging("RegionID");
                    _RegionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionID");
                    OnRegionIDChanged();
                }
            }
        }
        private global::System.Int32 _RegionID;
        partial void OnRegionIDChanging(global::System.Int32 value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TopLevel
        {
            get
            {
                return _TopLevel;
            }
            set
            {
                OnTopLevelChanging(value);
                ReportPropertyChanging("TopLevel");
                _TopLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopLevel");
                OnTopLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _TopLevel;
        partial void OnTopLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnTopLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentRegionID
        {
            get
            {
                return _ParentRegionID;
            }
            set
            {
                OnParentRegionIDChanging(value);
                ReportPropertyChanging("ParentRegionID");
                _ParentRegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRegionID");
                OnParentRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentRegionID;
        partial void OnParentRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionTypeID
        {
            get
            {
                return _RegionTypeID;
            }
            set
            {
                OnRegionTypeIDChanging(value);
                ReportPropertyChanging("RegionTypeID");
                _RegionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionTypeID");
                OnRegionTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionTypeID;
        partial void OnRegionTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegionCode
        {
            get
            {
                return _RegionCode;
            }
            set
            {
                OnRegionCodeChanging(value);
                ReportPropertyChanging("RegionCode");
                _RegionCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegionCode");
                OnRegionCodeChanged();
            }
        }
        private global::System.String _RegionCode;
        partial void OnRegionCodeChanging(global::System.String value);
        partial void OnRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Coordinates
        {
            get
            {
                return _Coordinates;
            }
            set
            {
                OnCoordinatesChanging(value);
                ReportPropertyChanging("Coordinates");
                _Coordinates = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Coordinates");
                OnCoordinatesChanged();
            }
        }
        private global::System.String _Coordinates;
        partial void OnCoordinatesChanging(global::System.String value);
        partial void OnCoordinatesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_RaceResult_Region", "RaceResult")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Region", "RaceResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("ElectionMonitoring.FK_RaceResult_Region", "RaceResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Region_RegionType", "RegionType")]
        public RegionType RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("ElectionMonitoring.FK_Region_RegionType", "RegionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("ElectionMonitoring.FK_Region_RegionType", "RegionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionType> RegionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("ElectionMonitoring.FK_Region_RegionType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionType>("ElectionMonitoring.FK_Region_RegionType", "RegionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="RegionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionType object.
        /// </summary>
        /// <param name="regionTypeID">Initial value of the RegionTypeID property.</param>
        public static RegionType CreateRegionType(global::System.Int32 regionTypeID)
        {
            RegionType regionType = new RegionType();
            regionType.RegionTypeID = regionTypeID;
            return regionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionTypeID
        {
            get
            {
                return _RegionTypeID;
            }
            set
            {
                if (_RegionTypeID != value)
                {
                    OnRegionTypeIDChanging(value);
                    ReportPropertyChanging("RegionTypeID");
                    _RegionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionTypeID");
                    OnRegionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RegionTypeID;
        partial void OnRegionTypeIDChanging(global::System.Int32 value);
        partial void OnRegionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ElectionMonitoring", "FK_Region_RegionType", "Region")]
        public EntityCollection<Region> Regions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Region>("ElectionMonitoring.FK_Region_RegionType", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Region>("ElectionMonitoring.FK_Region_RegionType", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ElectionMonitoring", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="yearID">Initial value of the YearID property.</param>
        public static Year CreateYear(global::System.Int32 yearID)
        {
            Year year = new Year();
            year.YearID = yearID;
            return year;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                if (_YearID != value)
                {
                    OnYearIDChanging(value);
                    ReportPropertyChanging("YearID");
                    _YearID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("YearID");
                    OnYearIDChanged();
                }
            }
        }
        private global::System.Int32 _YearID;
        partial void OnYearIDChanging(global::System.Int32 value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ElectionMonitoring", Name="AggregatedRaceResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AggregatedRaceResult : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                OnRaceIDChanging(value);
                ReportPropertyChanging("RaceID");
                _RaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceID");
                OnRaceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaceID;
        partial void OnRaceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                OnCandidateIdChanging(value);
                ReportPropertyChanging("CandidateId");
                _CandidateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CandidateId");
                OnCandidateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CandidateId;
        partial void OnCandidateIdChanging(Nullable<global::System.Int32> value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartyName
        {
            get
            {
                return _PartyName;
            }
            set
            {
                OnPartyNameChanging(value);
                ReportPropertyChanging("PartyName");
                _PartyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartyName");
                OnPartyNameChanged();
            }
        }
        private global::System.String _PartyName;
        partial void OnPartyNameChanging(global::System.String value);
        partial void OnPartyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartyAcronym
        {
            get
            {
                return _PartyAcronym;
            }
            set
            {
                OnPartyAcronymChanging(value);
                ReportPropertyChanging("PartyAcronym");
                _PartyAcronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartyAcronym");
                OnPartyAcronymChanged();
            }
        }
        private global::System.String _PartyAcronym;
        partial void OnPartyAcronymChanging(global::System.String value);
        partial void OnPartyAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalVotes
        {
            get
            {
                return _TotalVotes;
            }
            set
            {
                OnTotalVotesChanging(value);
                ReportPropertyChanging("TotalVotes");
                _TotalVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalVotes");
                OnTotalVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalVotes;
        partial void OnTotalVotesChanging(Nullable<global::System.Int32> value);
        partial void OnTotalVotesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ElectionMonitoring", Name="ElectionRaceResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ElectionRaceResult : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                OnRaceIDChanging(value);
                ReportPropertyChanging("RaceID");
                _RaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceID");
                OnRaceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RaceID;
        partial void OnRaceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                OnCandidateIdChanging(value);
                ReportPropertyChanging("CandidateId");
                _CandidateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CandidateId");
                OnCandidateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CandidateId;
        partial void OnCandidateIdChanging(Nullable<global::System.Int32> value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartyName
        {
            get
            {
                return _PartyName;
            }
            set
            {
                OnPartyNameChanging(value);
                ReportPropertyChanging("PartyName");
                _PartyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartyName");
                OnPartyNameChanged();
            }
        }
        private global::System.String _PartyName;
        partial void OnPartyNameChanging(global::System.String value);
        partial void OnPartyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartyAcronym
        {
            get
            {
                return _PartyAcronym;
            }
            set
            {
                OnPartyAcronymChanging(value);
                ReportPropertyChanging("PartyAcronym");
                _PartyAcronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartyAcronym");
                OnPartyAcronymChanged();
            }
        }
        private global::System.String _PartyAcronym;
        partial void OnPartyAcronymChanging(global::System.String value);
        partial void OnPartyAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalVotes
        {
            get
            {
                return _TotalVotes;
            }
            set
            {
                OnTotalVotesChanging(value);
                ReportPropertyChanging("TotalVotes");
                _TotalVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalVotes");
                OnTotalVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalVotes;
        partial void OnTotalVotesChanging(Nullable<global::System.Int32> value);
        partial void OnTotalVotesChanged();

        #endregion

    }

    #endregion

    
}
